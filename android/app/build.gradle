apply plugin: 'com.android.application'
apply from: 'capacitor.build.gradle'

// ✅ Load keystore properties
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "app.lovable.fcbb65b390f2441890e8a8de327e1a60"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "app.lovable.fcbb65b390f2441890e8a8de327e1a60"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // ✅ Optimize web asset packaging
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    // ✅ Java 21 toolchain
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    // ✅ Signing configs using keystore.properties
    signingConfigs {
        release {
            if (keystorePropertiesFile.exists()) {
                storeFile file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

repositories {
    google()
    mavenCentral()
    flatDir {
        // ⚠️ Keep this only if required by Cordova legacy plugins
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    // ✅ AdMob SDK (updated)
    implementation 'com.google.android.gms:play-services-ads:23.2.0'

    // Default Capacitor dependencies
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')

    // Test dependencies
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
}

// ✅ Apply Google Services plugin conditionally
try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.exists() && servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    } else {
        logger.lifecycle("google-services.json not found — skipping Firebase plugin.")
    }
} catch (Exception e) {
    logger.lifecycle("Error checking google-services.json: ${e.message}")
}
